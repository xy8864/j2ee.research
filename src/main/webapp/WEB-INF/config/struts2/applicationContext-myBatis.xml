<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"  
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
		">
	<!--
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/crm110?useUnicode=true&amp;characterEncoding=utf-8"/>
		<property name="username" value="root"/>
		<property name="password" value="fltrp"/>
		<property name="maxActive" value="100"/>
		<property name="maxIdle" value="30"/>
		<property name="maxWait" value="500"/>
		<property name="defaultAutoCommit" value="true"/>
	</bean>
	-->
	<!-- -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/crm110?useUnicode=true&amp;characterEncoding=utf-8"/>
		<property name="username" value="root"/>
		<property name="password" value="fltrp"/>
		<property name="maxActive" value="100"/>
		<property name="initialSize" value="2"/>
		<property name="minIdle" value="5"/>
		<property name="maxIdle" value="50"/>
		<property name="maxWait" value="12000"/>
		<property name="defaultAutoCommit" value="true"/>
		<property name="removeAbandoned" value="true"/>
		<property name="removeAbandonedTimeout" value="60"/>
		<property name="logAbandoned" value="true"/>
		<property name="testWhileIdle" value="true"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>
		<property name="validationQuery" value="select 1"/>
		<property name="timeBetweenEvictionRunsMillis" value="1800000"/>
		<property name="filters" value="mergeStat,stat"/>
		<property name="proxyFilters">
			<list>
				<bean class="com.alibaba.druid.filter.logging.Log4jFilter">
					<property name="statementLogEnabled" value="false"/>
					<property name="statementPrepareAfterLogEnabled" value="false"/>
					<property name="statementCloseAfterLogEnabled" value="false"/>
					<property name="resultSetLogEnabled" value="true"/>
					<property name="statementExecuteAfterLogEnabled" value="true"/>
					<property name="connectionLogEnabled" value="false"/>
					<property name="dataSourceLogEnabled" value="false"/>
				</bean>
			</list>
		</property>
	</bean>


	<!-- 配置事务管理器，注意这里的dataSource和SqlSessionFactoryBean的dataSource要一致，不然事务就没有作用了 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:conf/mybatis/mybatis-config.xml"/>
		<!--
		<property name="mapperLocations">
			<list>
				<value>classpath:j2ee/research/struts2/dao/mapper/*Mapper.xml</value>
			</list>
		</property>
		-->
	</bean>

	<!-- 配置事务的传播特性 -->
	<bean id="baseTransactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="edit*">PROPAGATION_REQUIRED</prop>
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="del*">PROPAGATION_REQUIRED</prop>
				<prop key="cancel*">PROPAGATION_REQUIRED</prop>
				<prop key="*">readOnly</prop>
			</props>
		</property>
	</bean>

	<!--mapper bean -->
	<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="j2ee.research.struts2.dao.UserMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	<bean id="studentMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="j2ee.research.struts2.dao.StudentMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	<!-- 通过扫描的模式，扫描目录在com/hoo/mapper目录下，所有的mapper都继承SqlMapper接口的接口， 这样一个bean就可以了
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.mobile.mapper"/>
        <property name="markerInterface" value="com.mobile.mapper.SqlMapper"/>
    </bean>-->

	<bean id="userService" class="j2ee.research.struts2.service.impl.UserServiceImpl" autowire="byName"/>
	<bean id="studentService" class="j2ee.research.struts2.service.impl.StudentServiceImpl" autowire="byName"/>

</beans>
